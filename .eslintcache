[{"D:\\Documents\\React JS\\VietJobs\\src\\index.js":"1","D:\\Documents\\React JS\\VietJobs\\src\\reportWebVitals.js":"2","D:\\Documents\\React JS\\VietJobs\\src\\App.js":"3","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Home\\Home.js":"4","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Reuse\\NavBar.js":"5","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Reuse\\SearchBar.js":"6","D:\\Documents\\React JS\\VietJobs\\src\\services\\CongViecService.js":"7","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Login\\Login.js":"8","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Register\\RegisterJobSeeker.js":"9","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Register\\RegisterEmployer.js":"10","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\JobSeekerIndex.js":"11","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\JobSearch\\JobSeekerJobSearch.js":"12","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\AccountManage\\Modals.js":"13","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSearch\\JobSearch.js":"14","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\AppliedCV\\AppliedCV.js":"15","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\SavedJob\\SavedJob.js":"16","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\JobDetail\\JobDetail.js":"17","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\CompanyDetail\\CompanyDetail.js":"18","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\EmployerIndex.js":"19","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\SideNav1.js":"20","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\SideNav2.js":"21","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\AccountManage\\Modals.js":"22","D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\AccountManage\\AccountManage1.js":"23","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\AccountManage\\AccountManage2.js":"24","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\JobPost\\JobPost.js":"25","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\JobPost\\Modals.js":"26","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\CVReview\\CVReview.js":"27","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\CVDetail\\CVDetail.js":"28","D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\CVApproved\\CVApproved.js":"29","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\index.js":"30","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\reportWebVitals.js":"31","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\App.js":"32","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Login\\Login.js":"33","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Register\\RegisterJobSeeker.js":"34","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Home\\Home.js":"35","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Register\\RegisterEmployer.js":"36","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\JobSeekerIndex.js":"37","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\JobSearch\\JobSeekerJobSearch.js":"38","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\AccountManage\\AccountManage1.js":"39","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\AppliedCV\\AppliedCV.js":"40","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\CompanyDetail\\CompanyDetail.js":"41","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\JobDetail\\JobDetail.js":"42","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\EmployerIndex.js":"43","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\AccountManage\\AccountManage2.js":"44","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\JobPost\\JobPost.js":"45","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\CVReview\\CVReview.js":"46","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\SavedJob\\SavedJob.js":"47","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\CVDetail\\CVDetail.js":"48","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\CVApproved\\CVApproved.js":"49","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\AccountManage\\Modals.js":"50","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\SideNav2.js":"51","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\SideNav1.js":"52","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\AccountManage\\Modals.js":"53","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\JobPost\\Modals.js":"54","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Reuse\\NavBar.js":"55","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\ApplicantService.js":"56","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Reuse\\SearchBar.js":"57","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSearch\\JobSearch.js":"58","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\authHeader.js":"59","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\EnterpriseService.js":"60","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\AuthService.js":"61","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\RouterEmployer.js":"62","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\RouteUser.js":"63","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\ResumeService.js":"64","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\UserService.js":"65","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\ProvinceService.js":"66","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\CareerService.js":"67","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\JobService.js":"68","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\CandidateService.js":"69","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\JobSavedService.js":"70"},{"size":526,"mtime":1608016174000,"results":"71","hashOfConfig":"72"},{"size":362,"mtime":1608016174000,"results":"73","hashOfConfig":"72"},{"size":3717,"mtime":1609798614503,"results":"74","hashOfConfig":"72"},{"size":2337,"mtime":1609270762467,"results":"75","hashOfConfig":"72"},{"size":875,"mtime":1609250286728,"results":"76","hashOfConfig":"72"},{"size":1559,"mtime":1609250022527,"results":"77","hashOfConfig":"72"},{"size":213,"mtime":1608016817999,"results":"78","hashOfConfig":"72"},{"size":2639,"mtime":1609799323385,"results":"79","hashOfConfig":"72"},{"size":4007,"mtime":1609799356905,"results":"80","hashOfConfig":"72"},{"size":3352,"mtime":1609799354102,"results":"81","hashOfConfig":"72"},{"size":284,"mtime":1609708960488,"results":"82","hashOfConfig":"72"},{"size":387,"mtime":1608819908765,"results":"83","hashOfConfig":"72"},{"size":10595,"mtime":1608795937452,"results":"84","hashOfConfig":"72"},{"size":2686,"mtime":1609684892855,"results":"85","hashOfConfig":"72"},{"size":2312,"mtime":1609162432248,"results":"86","hashOfConfig":"72"},{"size":2308,"mtime":1609162470669,"results":"87","hashOfConfig":"72"},{"size":5281,"mtime":1609799205498,"results":"88","hashOfConfig":"72"},{"size":4167,"mtime":1609193958415,"results":"89","hashOfConfig":"72"},{"size":289,"mtime":1609708998407,"results":"90","hashOfConfig":"72"},{"size":1788,"mtime":1609708937141,"results":"91","hashOfConfig":"72"},{"size":1795,"mtime":1609787471021,"results":"92","hashOfConfig":"72"},{"size":7979,"mtime":1609714514004,"results":"93","hashOfConfig":"72"},{"size":4450,"mtime":1609714293443,"results":"94","hashOfConfig":"72"},{"size":4150,"mtime":1609798842543,"results":"95","hashOfConfig":"72"},{"size":3284,"mtime":1609793441986,"results":"96","hashOfConfig":"72"},{"size":2923,"mtime":1609793317224,"results":"97","hashOfConfig":"72"},{"size":2767,"mtime":1609798995698,"results":"98","hashOfConfig":"72"},{"size":3507,"mtime":1609798418953,"results":"99","hashOfConfig":"72"},{"size":1374,"mtime":1609798576590,"results":"100","hashOfConfig":"72"},{"size":526,"mtime":1608016174000,"results":"101","hashOfConfig":"102"},{"size":362,"mtime":1608016174000,"results":"103","hashOfConfig":"102"},{"size":5189,"mtime":1610111716121,"results":"104","hashOfConfig":"102"},{"size":6571,"mtime":1609868981951,"results":"105","hashOfConfig":"102"},{"size":11076,"mtime":1609860513393,"results":"106","hashOfConfig":"102"},{"size":2337,"mtime":1609270762467,"results":"107","hashOfConfig":"102"},{"size":11320,"mtime":1609860411696,"results":"108","hashOfConfig":"102"},{"size":284,"mtime":1609708960488,"results":"109","hashOfConfig":"102"},{"size":445,"mtime":1610106895062,"results":"110","hashOfConfig":"102"},{"size":9134,"mtime":1610106096699,"results":"111","hashOfConfig":"102"},{"size":6582,"mtime":1610136654375,"results":"112","hashOfConfig":"102"},{"size":4167,"mtime":1609193958415,"results":"113","hashOfConfig":"102"},{"size":8938,"mtime":1610142892064,"results":"114","hashOfConfig":"102"},{"size":289,"mtime":1609708998407,"results":"115","hashOfConfig":"102"},{"size":4150,"mtime":1609798842543,"results":"116","hashOfConfig":"102"},{"size":3284,"mtime":1609793441986,"results":"117","hashOfConfig":"102"},{"size":2767,"mtime":1609798995698,"results":"118","hashOfConfig":"102"},{"size":6298,"mtime":1610137452842,"results":"119","hashOfConfig":"102"},{"size":3507,"mtime":1609798418953,"results":"120","hashOfConfig":"102"},{"size":1374,"mtime":1609798576590,"results":"121","hashOfConfig":"102"},{"size":37874,"mtime":1610106515175,"results":"122","hashOfConfig":"102"},{"size":2646,"mtime":1609869019346,"results":"123","hashOfConfig":"102"},{"size":3401,"mtime":1610114749677,"results":"124","hashOfConfig":"102"},{"size":7979,"mtime":1609714514004,"results":"125","hashOfConfig":"102"},{"size":2923,"mtime":1609793317224,"results":"126","hashOfConfig":"102"},{"size":1111,"mtime":1609869259219,"results":"127","hashOfConfig":"102"},{"size":1093,"mtime":1610104365595,"results":"128","hashOfConfig":"102"},{"size":1559,"mtime":1609250022527,"results":"129","hashOfConfig":"102"},{"size":7811,"mtime":1610127347928,"results":"130","hashOfConfig":"102"},{"size":261,"mtime":1609859235194,"results":"131","hashOfConfig":"102"},{"size":934,"mtime":1609860308860,"results":"132","hashOfConfig":"102"},{"size":678,"mtime":1610114814096,"results":"133","hashOfConfig":"102"},{"size":998,"mtime":1609866594292,"results":"134","hashOfConfig":"102"},{"size":992,"mtime":1609866604887,"results":"135","hashOfConfig":"102"},{"size":953,"mtime":1610086469243,"results":"136","hashOfConfig":"102"},{"size":473,"mtime":1610039378286,"results":"137","hashOfConfig":"102"},{"size":274,"mtime":1609859235181,"results":"138","hashOfConfig":"102"},{"size":658,"mtime":1609859235162,"results":"139","hashOfConfig":"102"},{"size":441,"mtime":1610139078441,"results":"140","hashOfConfig":"102"},{"size":500,"mtime":1610132315892,"results":"141","hashOfConfig":"102"},{"size":548,"mtime":1610126938325,"results":"142","hashOfConfig":"102"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},"12wexr0",{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"145"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},"2044tu",{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"204"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"204"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"204"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"204"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"204"},"D:\\Documents\\React JS\\VietJobs\\src\\index.js",[],["289","290"],"D:\\Documents\\React JS\\VietJobs\\src\\reportWebVitals.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\App.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Home\\Home.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Reuse\\NavBar.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Reuse\\SearchBar.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\services\\CongViecService.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Login\\Login.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Register\\RegisterJobSeeker.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Register\\RegisterEmployer.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\JobSeekerIndex.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\JobSearch\\JobSeekerJobSearch.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\AccountManage\\Modals.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSearch\\JobSearch.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\AppliedCV\\AppliedCV.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\SavedJob\\SavedJob.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\JobDetail\\JobDetail.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\CompanyDetail\\CompanyDetail.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\EmployerIndex.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\SideNav1.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\SideNav2.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\AccountManage\\Modals.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\JobSeeker\\AccountManage\\AccountManage1.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\AccountManage\\AccountManage2.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\JobPost\\JobPost.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\JobPost\\Modals.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\CVReview\\CVReview.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\CVDetail\\CVDetail.js",[],"D:\\Documents\\React JS\\VietJobs\\src\\Component\\Employer\\CVApproved\\CVApproved.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\index.js",[],["291","292"],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\reportWebVitals.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\App.js",["293"],"import React, { Component } from \"react\";\nimport \"./App.css\";\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    useRouteMatch,\n} from \"react-router-dom\";\nimport Home from \"./Component/Home/Home\";\nimport Login from \"./Component/Login/Login\";\nimport RegisterJobSeeker from \"./Component/Register/RegisterJobSeeker\";\nimport RegisterEmployer from \"./Component/Register/RegisterEmployer\";\nimport JobSeekerIndex from \"./Component/JobSeeker/JobSeekerIndex\";\nimport AccountManage1 from \"./Component/JobSeeker/AccountManage/AccountManage1\";\nimport JobSeekerJobSearch from \"./Component/JobSeeker/JobSearch/JobSeekerJobSearch\";\nimport AppliedCV from \"./Component/JobSeeker/AppliedCV/AppliedCV\";\nimport SavedJob from \"./Component/JobSeeker/SavedJob/SavedJob\";\nimport JobDetail from \"./Component/JobSeeker/JobDetail/JobDetail\";\nimport CompanyDetail from \"./Component/JobSeeker/CompanyDetail/CompanyDetail\";\nimport EmployerIndex from \"./Component/Employer/EmployerIndex\";\nimport AccountManage2 from \"./Component/Employer/AccountManage/AccountManage2\";\nimport JobPost from \"./Component/Employer/JobPost/JobPost\";\nimport CVReview from \"./Component/Employer/CVReview/CVReview\";\nimport CVDetail from \"./Component/Employer/CVDetail/CVDetail\";\nimport CVApproved from \"./Component/Employer/CVApproved/CVApproved\";\nimport RouterUser from \"./Component/RouteUser\";\nimport RouterEmployer from \"./Component/RouterEmployer\";\nclass App extends Component {\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/\" component={Home} />\n                        <Route\n                            exact\n                            path=\"/nguoi-tim-viec/tim-kiem-cong-viec\"\n                            component={JobSeekerJobSearch}\n                        />\n                        <Route exact path=\"/dang-nhap\" component={Login} />\n                        <Route\n                            exact\n                            path=\"/dang-ky/nguoi-tim-viec\"\n                            component={RegisterJobSeeker}\n                        />\n                        <Route\n                            exact\n                            path=\"/dang-ky/nha-tuyen-dung\"\n                            component={RegisterEmployer}\n                        />\n                        <Route\n                            exact\n                            path=\"/nguoi-tim-viec\"\n                            component={JobSeekerIndex}\n                        />\n                        <RouterUser\n                            exact\n                            path=\"/nguoi-tim-viec/quan-ly-tai-khoan\"\n                            component={AccountManage1}\n                        />\n                        <Route\n                            exact\n                            path=\"/nguoi-tim-viec/tim-kiem-cong-viec\"\n                            component={JobSeekerJobSearch}\n                        />\n                        <RouterUser\n                            exact\n                            path=\"/nguoi-tim-viec/ho-so-da-nop\"\n                            component={AppliedCV}\n                        />\n                        <RouterUser\n                            exact\n                            path=\"/nguoi-tim-viec/cong-viec-da-luu\"\n                            component={SavedJob}\n                        />\n                        <Route\n                            path=\"/nguoi-tim-viec/chi-tiet-cong-viec/:id\"\n                            component={JobDetail}\n                        />\n                        <Route\n                            exact\n                            path=\"/nguoi-tim-viec/chi-tiet-cong-ty/:id\"\n                            component={CompanyDetail}\n                        />\n\n                        <RouterEmployer\n                            exact\n                            path=\"/nha-tuyen-dung\"\n                            component={EmployerIndex}\n                        />\n                        <RouterEmployer\n                            exact\n                            path=\"/nha-tuyen-dung/quan-ly-tai-khoan\"\n                            component={AccountManage2}\n                        />\n                        <RouterEmployer\n                            exact\n                            path=\"/nha-tuyen-dung/dang-tin\"\n                            component={JobPost}\n                        />\n\n                        <RouterEmployer\n                            exact\n                            path=\"/nha-tuyen-dung/kiem-duyet-ho-so\"\n                            component={CVReview}\n                        />\n                        <Route\n                            exact\n                            path=\"/nha-tuyen-dung/chi-tiet-ho-so\"\n                            component={CVDetail}\n                        />\n                        <RouterEmployer\n                            exact\n                            path=\"/nha-tuyen-dung/ho-so-da-nhan\"\n                            component={CVApproved}\n                        />\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\nexport default App;\n","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Login\\Login.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Register\\RegisterJobSeeker.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Home\\Home.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Register\\RegisterEmployer.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\JobSeekerIndex.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\JobSearch\\JobSeekerJobSearch.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\AccountManage\\AccountManage1.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\AppliedCV\\AppliedCV.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\CompanyDetail\\CompanyDetail.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\JobDetail\\JobDetail.js",["294"],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\EmployerIndex.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\AccountManage\\AccountManage2.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\JobPost\\JobPost.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\CVReview\\CVReview.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\SavedJob\\SavedJob.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\CVDetail\\CVDetail.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\CVApproved\\CVApproved.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\AccountManage\\Modals.js",["295","296","297"],"import React, { useState } from \"react\";\r\nimport {\r\n    Modal,\r\n    Button,\r\n    Form,\r\n    InputGroup,\r\n    FormControl,\r\n    Alert,\r\n    Col,\r\n} from \"react-bootstrap\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport UserService from \"../../../services/UserService\";\r\nimport ApplicantService from \"../../../services/ApplicantService\";\r\nimport ProvinceService from \"../../../services/ProvinceService\";\r\nimport ResumeService from \"../../../services/ResumeService\";\r\nimport CareerService from \"../../../services/CareerService\";\r\nimport { useEffect } from \"react\";\r\nimport { FaIgloo } from \"react-icons/fa\";\r\n\r\nexport function ChangeEmail(props) {\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setValidated(false);\r\n        setShow(false);\r\n    };\r\n    const handleShow = () => {\r\n        setConfirmPassword(\"\");\r\n        setEmail(\"\");\r\n        setError(\"\");\r\n        setSuccess(\"\");\r\n        setShow(true);\r\n    };\r\n\r\n    const onChangeEmail = (e) => {\r\n        setEmail(e.target.value);\r\n    };\r\n\r\n    const onChangeConfirmPassword = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else if (form.checkValidity() === true) {\r\n            let emailForm = {\r\n                confirmPassword: confirmPassword,\r\n                email: email,\r\n            };\r\n\r\n            UserService.changeEmail(props.idUser, emailForm).then(\r\n                () => {\r\n                    setSuccess(\"Đổi mật khẩu thành công\");\r\n                    setValidated(false);\r\n                    setShow(false);\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    setError(\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    );\r\n                }\r\n            );\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-info\" size=\"sm\" onClick={handleShow}>\r\n                Đổi Email\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Đổi Email</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Email Hiện Tại</Form.Label>\r\n                            <Form.Control\r\n                                plaintext\r\n                                readOnly\r\n                                defaultValue=\"email@example.com\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Xác Nhận Mật Khẩu</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                placeholder=\"Nhập Mật Khẩu Hiện Tại\"\r\n                                required\r\n                                onChange={onChangeConfirmPassword}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Email Mới</Form.Label>\r\n                            <Form.Control\r\n                                type=\"email\"\r\n                                placeholder=\"Nhập Email Mới\"\r\n                                required\r\n                                onChange={onChangeEmail}\r\n                            />\r\n                        </Form.Group>\r\n                        {error !== \"\" && (\r\n                            <Alert variant=\"danger\">{error}</Alert>\r\n                        )}\r\n\r\n                        {success !== \"\" && (\r\n                            <Alert variant=\"success\">{success}</Alert>\r\n                        )}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Lưu Thay Đổi\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ChangePassword(props) {\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [currentPassword, setCurrentPassword] = useState(\"\");\r\n    const [validated, setValidated] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [success, setSuccess] = useState(\"\");\r\n\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => {\r\n        setValidated(false);\r\n        setShow(false);\r\n    };\r\n    const handleShow = () => {\r\n        setPassword(\"\");\r\n        setConfirmPassword(\"\");\r\n        setCurrentPassword(\"\");\r\n        setError(\"\");\r\n        setSuccess(\"\");\r\n        setShow(true);\r\n    };\r\n\r\n    const onChangeCurrentPassword = (e) => {\r\n        setCurrentPassword(e.target.value);\r\n    };\r\n\r\n    const onChangePassword = (e) => {\r\n        setPassword(e.target.value);\r\n    };\r\n\r\n    const onChangeConfirmPassword = (e) => {\r\n        setConfirmPassword(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n\r\n        if (form.checkValidity() === false || password !== confirmPassword) {\r\n            event.stopPropagation();\r\n        } else if (form.checkValidity() === true) {\r\n            let passwordForm = {\r\n                currentPassword: currentPassword,\r\n                password: password,\r\n            };\r\n\r\n            UserService.changePassword(props.idUser, passwordForm).then(\r\n                () => {\r\n                    setSuccess(\"Đổi mật khẩu thành công\");\r\n                    setValidated(false);\r\n                    setShow(false);\r\n                },\r\n                (error) => {\r\n                    setError(\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    );\r\n                }\r\n            );\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-danger\" size=\"sm\" onClick={handleShow}>\r\n                Đổi Mật Khẩu\r\n            </Button>\r\n\r\n            <Modal size=\"sm\" show={show} onHide={handleClose}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Đổi Mật Khẩu</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Mật Khẩu Hiện Tại</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                onChange={onChangeCurrentPassword}\r\n                                placeholder=\"Nhập Mật Khẩu Hiện Tại\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Mật Khẩu Mới</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                required\r\n                                onChange={onChangePassword}\r\n                                placeholder=\"Nhập Mật Khẩu Mới\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formBasicPassword\">\r\n                            <Form.Label>Xác Nhận Mật Khẩu Mới</Form.Label>\r\n                            <Form.Control\r\n                                type=\"password\"\r\n                                required\r\n                                onChange={onChangeConfirmPassword}\r\n                                placeholder=\"Nhập Lại Mật Khẩu Mới\"\r\n                                isValid={\r\n                                    password === null &&\r\n                                    password === confirmPassword\r\n                                }\r\n                                isInvalid={password !== confirmPassword}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Mật khẩu không trùng khớp\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        {error !== \"\" && (\r\n                            <Alert variant=\"danger\">{error}</Alert>\r\n                        )}\r\n\r\n                        {success !== \"\" && (\r\n                            <Alert variant=\"success\">{success}</Alert>\r\n                        )}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Lưu Thay Đổi\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ChangePersonalInfo(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [provinces, setProvinces] = useState([]);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [idUser, setIdUser] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [username, setUsername] = useState(\"\");\r\n    const [fullname, setFullname] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [birthday, setBirthday] = useState(\"\");\r\n    const [gender, setGender] = useState(\"\");\r\n    const [province, setProvince] = useState(\"\");\r\n    const [address, setAddress] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (show === true) {\r\n            ApplicantService.getApplicant(props.id).then((res) => {\r\n                let applicant = res.data;\r\n                setIdUser(applicant.user.id);\r\n                setEmail(applicant.user.email);\r\n                setUsername(applicant.user.username);\r\n                setFullname(applicant.user.fullname);\r\n                setPhone(applicant.user.phone);\r\n                setPassword(applicant.user.password);\r\n\r\n                setBirthday(applicant.birthday);\r\n                setGender(applicant.gender);\r\n                setAddress(applicant.address);\r\n                setProvince(applicant.province);\r\n            });\r\n\r\n            ProvinceService.listProvince().then((res) =>\r\n                setProvinces(res.data)\r\n            );\r\n        }\r\n    }, [props.id, show]);\r\n    const changeFullnameHandler = (e) => {\r\n        setFullname(e.target.value);\r\n    };\r\n\r\n    const changePhoneHandler = (e) => {\r\n        setPhone(e.target.value);\r\n    };\r\n    const changeBirthDayHandler = (e) => {\r\n        setBirthday(e.target.value);\r\n    };\r\n\r\n    const changeGenderHandler = (e) => {\r\n        setGender(e.target.value);\r\n    };\r\n\r\n    const changeAddressHandler = (e) => {\r\n        setAddress(e.target.value);\r\n    };\r\n\r\n    const changeProvinceHandler = (e) => {\r\n        setProvince(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else if (form.checkValidity() === true) {\r\n            let applicant = {\r\n                user: {\r\n                    id: idUser,\r\n                    email: email,\r\n                    username: username,\r\n                    fullname: fullname,\r\n                    phone: phone,\r\n                    password: password,\r\n                },\r\n                birthday: birthday,\r\n                gender: gender,\r\n                address: address,\r\n                province: province,\r\n            };\r\n\r\n            ApplicantService.updateApplicant(props.id, applicant).then(\r\n                () => {\r\n                    setValidated(false);\r\n                    setShow(false);\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    setError(\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    );\r\n                }\r\n            );\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setValidated(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => {\r\n        setPhone(\"\");\r\n        setAddress(\"\");\r\n        setBirthday(\"\");\r\n        setFullname(\"\");\r\n        setGender(\"\");\r\n        setProvince(\"\");\r\n\r\n        setError(\"\");\r\n        setShow(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-primary\" size=\"sm\" onClick={handleShow}>\r\n                Thay Đổi Thông Tin Cá Nhân\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Thay Đổi Thông Tin Cá Nhân</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Tên Đầy Đủ</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    type=\"input\"\r\n                                    placeholder=\"Họ Tên\"\r\n                                    value={fullname}\r\n                                    onChange={changeFullnameHandler}\r\n                                    required\r\n                                />\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput2\">\r\n                            <Form.Label>Ngày Sinh</Form.Label>\r\n                            <Form.Control\r\n                                type=\"date\"\r\n                                value={birthday}\r\n                                onChange={changeBirthDayHandler}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Giới Tính</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={changeGenderHandler}\r\n                                custom>\r\n                                {gender !== \"\" ? (\r\n                                    <option value={gender}>{gender}</option>\r\n                                ) : (\r\n                                    <option>Chọn Giới Tính</option>\r\n                                )}\r\n\r\n                                <option value=\"Nam\">Nam</option>\r\n                                <option value=\"Nữ\">Nữ</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                            <Form.Label>Số Điện Thoại</Form.Label>\r\n                            <Form.Control\r\n                                type=\"tel\"\r\n                                placeholder=\"Nhập Số Điện Thoại\"\r\n                                pattern=\"[0-9]{10}\"\r\n                                value={phone}\r\n                                onChange={changePhoneHandler}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Tỉnh Thành</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={changeProvinceHandler}\r\n                                custom>\r\n                                {province !== \"\" ? (\r\n                                    <option value={province}>{province}</option>\r\n                                ) : (\r\n                                    <option value=\"\">Chọn Tỉnh Thành</option>\r\n                                )}\r\n\r\n                                {provinces.map((province, index) => (\r\n                                    <option\r\n                                        value={province.province}\r\n                                        key={index}>\r\n                                        {province.province}\r\n                                    </option>\r\n                                ))}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                            <Form.Label>Địa Chỉ</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Nhập Địa Chỉ\"\r\n                                value={address}\r\n                                onChange={changeAddressHandler}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        {error !== \"\" && (\r\n                            <Alert variant=\"danger\">{error}</Alert>\r\n                        )}\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Lưu Thay Đổi\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ChangeCV(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n\r\n    const [desiredVacancy, setDesiredVacancy] = useState(\"\");\r\n    const [education, setEducation] = useState(\"\");\r\n    const [experience, setExperience] = useState(\"\");\r\n    const [jobType, setJobType] = useState(\"\");\r\n    const [foreignLanguage, setForeignLanguage] = useState(\"\");\r\n    const [wage, setWage] = useState();\r\n    const [monetaryUnit, setMonetaryUnit] = useState(\"\");\r\n    const [career, setCareer] = useState({});\r\n    const [resumeId, setResumeId] = useState();\r\n    const [careers, setCareers] = useState([]);\r\n\r\n    const [error, setError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (show === true) {\r\n            ResumeService.getResumeByApplicant(props.id).then((res) => {\r\n                let resume = res.data;\r\n                setResumeId(resume.id);\r\n                setDesiredVacancy(resume.desiredVacancy);\r\n                setEducation(resume.education);\r\n                setExperience(resume.experience);\r\n                setJobType(resume.jobType);\r\n                setForeignLanguage(resume.foreignLanguage);\r\n                const valuesWage = resume.wage.split(\" \");\r\n                const monetagy = valuesWage[1]\r\n                    ? resume.wage.substr(resume.wage.indexOf(\" \") + 1)\r\n                    : \"\";\r\n                setMonetaryUnit(monetagy);\r\n                setWage(Number.parseInt(resume.wage));\r\n                setCareer(resume.career);\r\n            });\r\n            CareerService.getCareers().then((res) => setCareers(res.data));\r\n        }\r\n    }, [props.id, show]);\r\n    const changeDesiredVacancyHandler = (e) => {\r\n        setDesiredVacancy(e.target.value);\r\n    };\r\n\r\n    const changeEducationHandler = (e) => {\r\n        setEducation(e.target.value);\r\n    };\r\n    const changeExperienceHandler = (e) => {\r\n        setExperience(e.target.value);\r\n    };\r\n\r\n    const changeJobTypeHandler = (e) => {\r\n        setJobType(e.target.value);\r\n    };\r\n\r\n    const changeForeignLanguageHandler = (e) => {\r\n        setForeignLanguage(e.target.value);\r\n    };\r\n\r\n    const changeWageHandler = (e) => {\r\n        setWage(e.target.value);\r\n    };\r\n\r\n    const changeCareerHandler = (e) => {\r\n        setCareer(e.target.value);\r\n    };\r\n\r\n    const changeMonetaryUnitHandler = (e) => {\r\n        setMonetaryUnit(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else if (form.checkValidity() === true) {\r\n            let resume = {\r\n                desiredVacancy: desiredVacancy,\r\n                experience: experience,\r\n                education: education,\r\n                career: career,\r\n                foreignLanguage: foreignLanguage,\r\n                wage: wage + \" \" + monetaryUnit,\r\n                jobType: jobType,\r\n                applicant: { id: props.id },\r\n            };\r\n\r\n            ResumeService.changeResume(props.id, resumeId, resume).then(\r\n                () => {\r\n                    setValidated(false);\r\n                    setShow(false);\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    setError(\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    );\r\n                }\r\n            );\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setValidated(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => {\r\n        setDesiredVacancy(\"\");\r\n        setEducation(\"\");\r\n        setExperience(\"\");\r\n        setJobType(\"\");\r\n        setForeignLanguage(\"\");\r\n        setWage(\"\");\r\n        setCareer(\"\");\r\n        setMonetaryUnit(\"\");\r\n        setError(\"\");\r\n        setShow(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"outline-success\" size=\"sm\" onClick={handleShow}>\r\n                Chỉnh Sửa Hồ Sơ\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Chỉnh Sửa Hồ Sơ</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"formBasicEmail\">\r\n                            <Form.Label>Vị Trí Mong Muốn</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Nhập Vị Trí Mong Muốn\"\r\n                                value={desiredVacancy}\r\n                                onChange={changeDesiredVacancyHandler}\r\n                                required\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Row>\r\n                            <Form.Group\r\n                                as={Col}\r\n                                controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Label>Kinh Nghiệm</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    onChange={changeExperienceHandler}\r\n                                    required>\r\n                                    {experience !== \"\" ? (\r\n                                        <option value={experience}>\r\n                                            {experience}\r\n                                        </option>\r\n                                    ) : (\r\n                                        <option value=\"\">\r\n                                            Chọn Kinh Nghiệm\r\n                                        </option>\r\n                                    )}\r\n\r\n                                    <option value=\"Chưa Có\">Chưa Có</option>\r\n                                    <option value=\"Dưới 1 năm\">\r\n                                        Dưới 1 năm\r\n                                    </option>\r\n                                    <option value=\"1 Năm\">1 Năm</option>\r\n                                    <option value=\"2 Năm\">2 Năm</option>\r\n                                    <option value=\"3 Năm\">3 Năm</option>\r\n                                    <option value=\"4 Năm\">4 Năm</option>\r\n                                    <option value=\"5 Năm\">5 Năm</option>\r\n                                    <option value=\"Trên 5 Năm\">\r\n                                        Trên 5 Năm\r\n                                    </option>\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group\r\n                                as={Col}\r\n                                controlId=\"exampleForm.ControlSelect1\">\r\n                                <Form.Label>Ngành Nghề</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    onChange={changeCareerHandler}\r\n                                    required>\r\n                                    {career !== \"\" ? (\r\n                                        <option value={career.id}>\r\n                                            {career.name}\r\n                                        </option>\r\n                                    ) : (\r\n                                        <option value=\"\">\r\n                                            Chọn Ngành Nghề\r\n                                        </option>\r\n                                    )}\r\n\r\n                                    {careers.map((career, index) => (\r\n                                        <option value={career.id} key={index}>\r\n                                            {career.name}\r\n                                        </option>\r\n                                    ))}\r\n                                </Form.Control>\r\n                            </Form.Group>\r\n                        </Form.Row>\r\n\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Trình Độ</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={changeEducationHandler}\r\n                                required>\r\n                                {education !== \"\" ? (\r\n                                    <option value={education}>\r\n                                        {education}\r\n                                    </option>\r\n                                ) : (\r\n                                    <option value=\"\">Chọn Trình Độ</option>\r\n                                )}\r\n\r\n                                <option value=\"Trung học\">Trung học</option>\r\n                                <option value=\"Trung Cấp\">Trung Cấp</option>\r\n                                <option value=\"Cao đẳng\">Cao đẳng</option>\r\n                                <option value=\"Đại học\">Đại học</option>\r\n                                <option value=\"Khác\">Khác</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Hình Thức Làm Việc</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={changeJobTypeHandler}\r\n                                required>\r\n                                {jobType !== \"\" ? (\r\n                                    <option value={jobType}>{jobType}</option>\r\n                                ) : (\r\n                                    <option value=\"\">Chọn Hình Thức</option>\r\n                                )}\r\n\r\n                                <option value=\"Parttime\">Parttime</option>\r\n                                <option value=\"Fulltime\">Fulltime</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                            <Form.Label>Ngoại Ngữ</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                onChange={changeForeignLanguageHandler}\r\n                                required>\r\n                                {foreignLanguage !== \"\" ? (\r\n                                    <option value={foreignLanguage}>\r\n                                        {foreignLanguage}\r\n                                    </option>\r\n                                ) : (\r\n                                    <option value=\"\">Chọn Ngoại Ngữ</option>\r\n                                )}\r\n\r\n                                <option value=\"Tiếng Anh\">Tiếng Anh</option>\r\n                                <option value=\"Tiếng Trung\">Tiếng Trung</option>\r\n                                <option value=\"Tiếng Nhật\">Tiếng Nhật</option>\r\n                                <option value=\"Tiếng Hàn\">Tiếng Hàn</option>\r\n                                <option value=\"Khác\">Khác</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Mức Lương Mong Muốn</Form.Label>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <FormControl\r\n                                    type=\"number\"\r\n                                    min=\"1\"\r\n                                    value={wage}\r\n                                    onChange={changeWageHandler}\r\n                                    required\r\n                                />\r\n                                <Form.Control\r\n                                    as=\"select\"\r\n                                    onChange={changeMonetaryUnitHandler}\r\n                                    onSelect={monetaryUnit}\r\n                                    required>\r\n                                    {monetaryUnit !== \"\" ? (\r\n                                        <option value={monetaryUnit}>\r\n                                            {monetaryUnit}\r\n                                        </option>\r\n                                    ) : (\r\n                                        <option value=\"\">\r\n                                            Chọn Đơn Vị Tiền Tệ\r\n                                        </option>\r\n                                    )}\r\n\r\n                                    <option value=\"VNĐ\">VNĐ</option>\r\n                                    <option value=\"USD\">USD</option>\r\n                                </Form.Control>\r\n                            </InputGroup>\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Lưu Thay Đổi\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ChangeSocialNetwork(props) {\r\n    const [show, setShow] = useState(false);\r\n    const [validated, setValidated] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n    const [fb, setFb] = useState(\"\");\r\n    const [ig, setIg] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        if (show === true) {\r\n            ApplicantService.getApplicant(props.id).then((res) => {\r\n                const applicant = res.data;\r\n\r\n                setFb(applicant.fb);\r\n                setIg(applicant.ig);\r\n            });\r\n        }\r\n    }, [props.id, show]);\r\n\r\n    const changeFbHandler = (e) => {\r\n        setFb(e.target.value);\r\n    };\r\n\r\n    const changeIgHandler = (e) => {\r\n        setIg(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        const form = event.currentTarget;\r\n        event.preventDefault();\r\n        if (form.checkValidity() === false) {\r\n            event.stopPropagation();\r\n        } else if (form.checkValidity() === true) {\r\n            let socialForm = {\r\n                fb: fb,\r\n                ig: ig,\r\n            };\r\n\r\n            ApplicantService.changeSocial(props.id, socialForm).then(\r\n                () => {\r\n                    setValidated(false);\r\n                    setShow(false);\r\n                    window.location.reload();\r\n                },\r\n                (error) => {\r\n                    setError(\r\n                        (error.response &&\r\n                            error.response.data &&\r\n                            error.response.data.message) ||\r\n                            error.message ||\r\n                            error.toString()\r\n                    );\r\n                }\r\n            );\r\n        }\r\n\r\n        setValidated(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setValidated(false);\r\n        setShow(false);\r\n    };\r\n\r\n    const handleShow = () => {\r\n        setFb(\"\");\r\n        setIg(\"\");\r\n\r\n        setError(\"\");\r\n        setShow(true);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\r\n                Đổi Link Profile\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title> Đổi Link Profile</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                            <Form.Label>Facebook</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Nhập link profile facebook ( không bắt buộc )\"\r\n                                value={fb}\r\n                                onChange={changeFbHandler}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"exampleForm.ControlInput3\">\r\n                            <Form.Label>Instagram</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                placeholder=\"Nhập link profile instagram ( không bắt buộc )\"\r\n                                value={ig}\r\n                                onChange={changeIgHandler}\r\n                            />\r\n                        </Form.Group>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"success\" type=\"submit\">\r\n                            Lưu Thay Đổi\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Form>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n\r\nexport function ChangeAvatar() {\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n\r\n    return (\r\n        <>\r\n            <Button variant=\"light\" size=\"sm\" onClick={handleShow}>\r\n                <MdModeEdit />\r\n            </Button>\r\n\r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Đổi Ảnh Đại Diện</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.File\r\n                                accept=\"image/*\"\r\n                                id=\"exampleFormControlFile1\"\r\n                                label=\"Chọn Ảnh Đại Diện\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"success\" onClick={handleClose}>\r\n                        Lưu Thay Đổi\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\SideNav2.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSeeker\\SideNav1.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\AccountManage\\Modals.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Employer\\JobPost\\Modals.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Reuse\\NavBar.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\ApplicantService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\Reuse\\SearchBar.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\JobSearch\\JobSearch.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\authHeader.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\EnterpriseService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\AuthService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\RouterEmployer.js",["298"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst RouteUser = ({ component: Component, ...rest }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    useEffect(() => {\r\n        let token = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n        if (token && token.roles.includes(\"ROLE_ENTERPRISE\")) {\r\n            setIsAuthenticated(true);\r\n        } else {\r\n            setIsAuthenticated(false);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (isAuthenticated === null) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                !isAuthenticated ? (\r\n                    <Redirect to=\"/dang-nhap\" />\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default RouteUser;\r\n","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\Component\\RouteUser.js",["299"],"import React, { useEffect, useState } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst RouteUser = ({ component: Component, ...rest }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(null);\r\n    useEffect(() => {\r\n        let token = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n        if (token && token.roles.includes(\"ROLE_USER\")) {\r\n            setIsAuthenticated(true);\r\n        } else {\r\n            setIsAuthenticated(false);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    if (isAuthenticated === null) {\r\n        return <></>;\r\n    }\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                !isAuthenticated ? (\r\n                    <Redirect to=\"/dang-nhap\" />\r\n                ) : (\r\n                    <Component {...props} />\r\n                )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default RouteUser;\r\n","C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\ResumeService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\UserService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\ProvinceService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\CareerService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\JobService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\CandidateService.js",[],"C:\\Users\\votri\\Desktop\\VietJobs-Final\\src\\services\\JobSavedService.js",[],{"ruleId":"300","replacedBy":"301"},{"ruleId":"302","replacedBy":"303"},{"ruleId":"300","replacedBy":"304"},{"ruleId":"302","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":7,"column":5,"nodeType":"308","messageId":"309","endLine":7,"endColumn":18},{"ruleId":"306","severity":1,"message":"310","line":4,"column":18,"nodeType":"308","messageId":"309","endLine":4,"endColumn":26},{"ruleId":"306","severity":1,"message":"311","line":18,"column":10,"nodeType":"308","messageId":"309","endLine":18,"endColumn":17},{"ruleId":"306","severity":1,"message":"312","line":516,"column":12,"nodeType":"308","messageId":"309","endLine":516,"endColumn":17},{"ruleId":"306","severity":1,"message":"312","line":811,"column":12,"nodeType":"308","messageId":"309","endLine":811,"endColumn":17},{"ruleId":"306","severity":1,"message":"313","line":3,"column":8,"nodeType":"308","messageId":"309","endLine":3,"endColumn":19},{"ruleId":"306","severity":1,"message":"313","line":3,"column":8,"nodeType":"308","messageId":"309","endLine":3,"endColumn":19},"no-native-reassign",["314"],"no-negated-in-lhs",["315"],["314"],["315"],"no-unused-vars","'useRouteMatch' is defined but never used.","Identifier","unusedVar","'FcRating' is defined but never used.","'FaIgloo' is defined but never used.","'error' is assigned a value but never used.","'AuthService' is defined but never used.","no-global-assign","no-unsafe-negation"]